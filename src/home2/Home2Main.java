package home2;

public class Home2Main {
    public static void main(String[] args) {
        /*
        1.2 Использовать ВСЕ возможные побитовые операции с числами 42 и 15.
        1.3 Использовать ВСЕ возможные побитовые операции с числами -42 и -15.
        1.4 В комментариях к каждой операции написать двоичный код каждого числа и результата операции.
         */
        System.out.println("Побитовый унарный оператор NOT");
        /*
        ~	Побитовый унарный оператор NOT
        42:00101010   ~42:11010101=>-43
        15:00001111   ~15:11110000=>-16
       -42:11010110   ~(-42):00101001=>41
       -15:11110001   ~(-15):00001110=>14
         */
        System.out.println("~42 = "+ ~42);
        System.out.println("~15 = "+ ~15);
        System.out.println("~-42 = "+ ~-42);
        System.out.println("~-15 = "+ ~-15);
        System.out.println("-------------------- ");
        System.out.println("Побитовый AND");
        /*
        &	Побитовый AND
        42&15:                    -42 & -15:
        00101010                   11010110
        00001111                   11110001
        --------                  ----------
        00001010=>10               11010000=>-48
         */
        System.out.printf("42 & 15 = %d\n",(42 & 15));
        System.out.printf("-42 & -15 = %d\n",(-42 & -15));
        System.out.println("-------------------- ");
        System.out.println("Побитовый AND с присваиванием");
        /*
        a=42                       b=-42
        a&=15:                     b &= -15:
        00101010                   11010110
        00001111                   11110001
        --------                  ----------
        00001010=>10               11010000=>-48
         */
        byte a=42;
        a&=15;
        byte b=-42;
        b&=-15;
        System.out.println("42 &= 15 : "+ a);
        System.out.println("-42 &= -15 : "+ b);
        System.out.println("-------------------- ");
        System.out.println("Побитовый OR");
        /*
         42 | 15:                   -42 | -15:
        00101010                   11010110
        00001111                   11110001
        --------                  ----------
        00101111=>47               11110111=>-9
         */
        System.out.printf("42 | 15 = %d\n",(42 | 15));
        System.out.printf("-42 | -15 = %d\n",(-42 | -15));
        System.out.println("-------------------- ");
        System.out.println("Побитовый OR с присваиванием");
        /*
        42 |= 15:                  -42 |= -15:
        00101010                   11010110
        00001111                   11110001
        --------                  ----------
        00101111=>47               11110111=>-9
         */
        byte aor=42;
        aor|=15;
        byte bor=-42;
        bor|=-15;
        System.out.println("42 |= 15 : "+ aor);
        System.out.println("-42 |= -15 : "+ bor);
        System.out.println("-------------------- ");
        System.out.println("Побитовый исключающее OR");
        /*
         42 ^ 15:                   -42 ^ -15:
        00101010                   11010110
        00001111                   11110001
        --------                  ----------
        00100101=>37               00100111=>39
         */
        System.out.printf("42 ^ 15 = %d\n",(42 ^ 15));
        System.out.printf("-42 ^ -15 = %d\n",(-42 ^ -15));
        System.out.println("-------------------- ");
        System.out.println("Побитовый исключающее OR с присваиванием");
        /*
        42 ^= 15:                  -42 ^= -15:
        00101010                   11010110
        00001111                   11110001
        --------                  ----------
        00100101=>37               00100111=>39
         */
        byte anor=42;
        anor^=15;
        byte bnor=-42;
        bnor^=-15;
        System.out.println("42 ^= 15 : "+ anor);
        System.out.println("-42 ^= -15 : "+ bnor);
        System.out.println("-------------------- ");
        System.out.println("Сдвиг");

       //42:00101010  >>2:00001010=>10
        System.out.printf("42 >> 2 = %d\n",(42 >> 2));
       //15:00001111  >>2:00000011=>3
        System.out.printf("15 >> 2 = %d\n",(15 >> 2));
       //42:00101010  <<2:10101000=>168
         System.out.printf("42 << 2 = %d\n",(42 << 2));
       //15:00001111  <<2:00111100=>60
        System.out.printf("15 << 2 = %d\n",(15 <<  2));
        //42:00101010  >>>2:00001010=>10
        System.out.printf("42 >>> 2 = %d\n",(42>>>2));
        //15:00001111  >>>2:00000011=>3
        System.out.printf("15 >>> 2 = %d\n",(15>>>2));
        System.out.println("-------------------- ");


    }



}
