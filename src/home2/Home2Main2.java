package home2;

public class Home2Main2 {
    public static void main(String[] args) {
        /*
        Изучить приоритетность операторов по прикреплённой таблице.
        Сначала посчитать результаты всех ниже приведённых примеров устно,
        а потом проверить в IDE (в случае ошибок свериться с таблицой приоритетов,
        повторять просчёт примеров до полного соотвествия).
        Результатом МОЖЕТ БЫТЬ ОШИБКА компиляции,
        может быть ошибка выполнения программы или корректный результат.
        Все значения в этих переменных должны быть записаны в int и boolean переменные.
        Напротив каждой строчки нужно написать комментарий с результатом и объяснением почему вы получили такой результат.
         */
        System.out.println(5+2/8);//  Результат= 5, первым выполняется целочисленное деление, затем сложение
        System.out.println((5+2)/8); //Результат=0, первым выполняется действия в скобках, затем целочисленное деление
        int a=2;
        System.out.println((5 + (a++)) / 8); //Результат=0, первым выполнится postfix инкремент а=3 , затем сложение в скобках 5+2, но a=3 , затем целочисденное деление

        //5.4 (5 + 2++) / --8 :Результат=1, первым выполнится postfix инкремент т.е aa=3, затем действие в скомбках (5+2)=7 в качестве аа беретсязначение 2,
        // затем prefix декремент, b=7 и затем выполняется целочисленное деление 7/7
        int aa=2, bb=8;
        System.out.println((5 + (aa++)) / (--bb));

        // 5.5 (5 * 2 >> 2++) / --8  Результат=0, первым выполнится postfix инкремент т.е aa=3 ,
        // затем умножение 5*2=10, затем сдвигает биты числа 10, на 2 разряда вправо, получим 2,затем prefix декремент b=7 и затем деление 2 на 7
        int aaa=2, bbb=8;
        System.out.println((5 * 2 >> aaa++) / --bbb);

        //5.6 (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8  Результат=1
        int aaaa=2,bbbb=8;
        //первым выполнится postfix инкремент т.е aa=3, затем 22*2=44, затем 5+7=12, затем 44>>2 =11, затем будет выарлнен тернарный оператор 12>20?68:11, т.к. он в скобках
        //резудьтат выполнения =11, затем prefix декремент b=7 и затем целочисленное деление 11 на 7
        System.out.println((5 + 7 > 20 ? 68 : 22 * 2 >> aaaa++) / --bbbb);

        //5.7 (5 + 7 > 20 ? 68 => 68 : 22 * 2 >> 2++) / --8
        //Первым выполняется действие в скобках, первым выполнится postfix инкремент т.е aa=3, затем 22*2=44,затем 5+7=12,затем 44>>2 =11, затем 68>=68 :true,
        //затем будет выарлнен тернарный оператор 12>20?true:11, получим 11, затем затем prefix декремент b=7 и затем целочисленное деление 11 на 7
        //В результате должны получить 1, но т.к. в примере есть деление и терныргый оператор в случае значения истина может приянть логическое значение, то запредено boolean/int
        //int a7=2, b7=8;
        // System.out.println((5 + 7 > 20 ? (68>=68) : 22 * 2 >> a7++) / --a7);

        //5.8  6 - 2 > 3 && 12 * 12 <= 119
        //Результат:false
        //первым будет выполнено умножение 12*12=144, затем вычитание 6-2=4, затем сравнение 4>3 :true и 144<=119 :false
        //затем выполним true && false : false
           System.out.println( 6 - 2 > 3 && 12 * 12 <= 119);

        // 5.9 true && false
        // результат выполнения логического выражения= false
        System.out.println(true&&false);

    }
}
